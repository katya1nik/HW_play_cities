## –ó–∞–¥–∞–Ω–∏–µ üë∑‚Äç‚ôÇÔ∏è

### –ö–ª–∞—Å—Å—ã –∏ –∏—Ö —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
"""
1. **–ö–ª–∞—Å—Å `JsonFile`**
   - –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —á—Ç–µ–Ω–∏–µ  –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON.
   - –ú–µ—Ç–æ–¥—ã:
     - `read_data()`: –ß–∏—Ç–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON-—Ñ–∞–π–ª–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö.

2. **–ö–ª–∞—Å—Å `CitiesSerializer`**
   - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–∞—Ç–∞–∫–ª–∞—Å—Å `City` –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥–æ—Ä–æ–¥–∞—Ö.
   - `__init__(self, city_data)`: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤, —Å–æ–∑–¥–∞–≤–∞—è —ç–∫–∑–µ–º–ø–ª—è—Ä—ã `City`.
   - –ú–µ—Ç–æ–¥—ã:
     - `get_all_cities()`: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≥–æ—Ä–æ–¥–æ–≤.

3. **–ö–ª–∞—Å—Å `City`**
   - –î–∞—Ç–∞–∫–ª–∞—Å—Å –¥–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –≥–æ—Ä–æ–¥–∞.
   - –ü–æ–ª—è:
     - `name`: –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.
     - `population`: –ù–∞—Å–µ–ª–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.
     - `subject`: –°—É–±—ä–µ–∫—Ç —Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏.
     - `district`: –†–∞–π–æ–Ω.
     - `latitude`: –®–∏—Ä–æ—Ç–∞.
     - `longitude`: –î–æ–ª–≥–æ—Ç–∞.
     - `is_used`: –§–ª–∞–≥, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –ª–∏ –≥–æ—Ä–æ–¥ –≤ –∏–≥—Ä–µ.

4. **–ö–ª–∞—Å—Å `CityGame`**
   - –£–ø—Ä–∞–≤–ª—è–µ—Ç –ª–æ–≥–∏–∫–æ–π –∏–≥—Ä—ã.
   - –ú–µ—Ç–æ–¥—ã:
     - `__init__(self, cities)`: –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä `CitiesSerializer` –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã.
     - `start_game()`: –ù–∞—á–∏–Ω–∞–µ—Ç –∏–≥—Ä—É, –≤–∫–ª—é—á–∞—è –ø–µ—Ä–≤—ã–π —Ö–æ–¥ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞.
     - `human_turn(city_input)`: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ö–æ–¥ —á–µ–ª–æ–≤–µ–∫–∞.
     - `computer_turn()`: –í—ã–ø–æ–ª–Ω—è–µ—Ç —Ö–æ–¥ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞.
     - `check_game_over()`: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–≥—Ä—ã –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è.
     - `save_game_state()`: –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ.

5. **–£–ø—Ä–∞–≤–ª—è—é—â–∏–π –∫–ª–∞—Å—Å `GameManager`**
   - –§–∞—Å–∞–¥, –∫–æ—Ç–æ—Ä—ã–π –∏–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏.
   - –ê—Ç—Ä–∏–±—É—Ç—ã:
     - `json_file`: –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ `JsonFile`.
     - `cities_serializer`: –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ `CitiesSerializer`.
     - `city_game`: –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ `CityGame`.
   - –ú–µ—Ç–æ–¥—ã:
     - `__call__()`: –ó–∞–ø—É—Å–∫–∞–µ—Ç –∏–≥—Ä—É, –≤—ã–∑—ã–≤–∞—è –º–µ—Ç–æ–¥—ã `start_game()`, `human_turn()`, –∏ `computer_turn()` –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã.
     - `run_game()`: –ö–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–≥—Ä—ã.
     - `display_game_result()`: –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–≥—Ä—ã –ø–æ—Å–ª–µ –µ—ë –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ).


### –¢–∞–±–ª–∏—Ü–∞ (–≤–æ–∑–º–æ–∂–Ω—ã—Ö) –∫–ª–∞—Å—Å–æ–≤ –∏ –º–µ—Ç–æ–¥–æ–≤

| –ö–ª–∞—Å—Å               | –ú–µ—Ç–æ–¥—ã                          | –û–ø–∏—Å–∞–Ω–∏–µ                                                                                 |
|---------------------|---------------------------------|------------------------------------------------------------------------------------------|
| `JsonFile`          | `read_data()`                   | –ß–∏—Ç–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON-—Ñ–∞–π–ª–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö.                                             |
|                     | `write_data(data)`              | –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ JSON-—Ñ–∞–π–ª.                                                           |
| `CitiesSerializer`  | `__init__(self, city_data)`     | –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤, —Å–æ–∑–¥–∞–≤–∞—è —ç–∫–∑–µ–º–ø–ª—è—Ä—ã `City`.                               |
|                     | `get_all_cities()`              | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≥–æ—Ä–æ–¥–æ–≤.                                                          |
| `City`              | -                               | –î–∞—Ç–∞–∫–ª–∞—Å—Å –¥–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –≥–æ—Ä–æ–¥–∞ —Å –ø–æ–ª—è–º–∏: `name`, `population`, `subject`, `district`, `latitude`, `longitude`, `is_used`. |
| `CityGame`          | `__init__(self, cities)`        | –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä `CitiesSerializer` –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã.                  |
|                     | `start_game()`                  | –ù–∞—á–∏–Ω–∞–µ—Ç –∏–≥—Ä—É, –≤–∫–ª—é—á–∞—è –ø–µ—Ä–≤—ã–π —Ö–æ–¥ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞.                                            |
|                     | `human_turn(city_input)`        | –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ö–æ–¥ —á–µ–ª–æ–≤–µ–∫–∞.                                                               |
|                     | `computer_turn()`               | –í—ã–ø–æ–ª–Ω—è–µ—Ç —Ö–æ–¥ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞.                                                                |
|                     | `check_game_over()`             | –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–≥—Ä—ã –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è.                                       |
|                     | `save_game_state()`             | –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ.                                               |
| `GameManager`       | `__call__()`                    | –ó–∞–ø—É—Å–∫–∞–µ—Ç –∏–≥—Ä—É, –≤—ã–∑—ã–≤–∞—è –º–µ—Ç–æ–¥—ã `start_game()`, `human_turn()`, –∏ `computer_turn()` –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã. |
|                     | `run_game()`                    | –ö–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–≥—Ä—ã.                                                            |
|                     | `display_game_result()` (–æ–ø—Ü.)  | –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–≥—Ä—ã –ø–æ—Å–ª–µ –µ—ë –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ).                             |

###
"""

from dataclasses import dataclass
import json

class JsonFile:
    """
    –ö–ª–∞—Å—Å –¥–ª—è —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON-—Ñ–∞–π–ª–∞ —Å –≥–æ—Ä–æ–¥–∞–º–∏ –†–æ—Å—Å–∏–∏
    """
    def __init__(self, file_path: str):
        self.file_path = file_path
    def read_data(self):
        with open(self.file_path, 'r', encoding='utf-8') as file:
            return json.load(file)


sym_lower_set = set('–∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è')

# –ú—ã –º–æ–∂–µ–º –ø–µ—Ä–µ–ø–∞–∫–æ–≤–∞—Ç—å –≥–æ—Ä–æ–¥–∞ –≤ —Å–µ—Ç
cities_set = {city['name'].lower() for city in cities_list}


# –°–æ–±–∏—Ä–∞–µ–º —Å–µ—Ç "–ø–ª–æ—Ö–∏—Ö –±—É–∫–≤"
bad_letters = set()
iter_count = 0
# –í–Ω–µ—à–Ω–∏–π —Ü–∏–∫–ª –¥–ª—è –æ–±—Ö–æ–¥–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –±—É–∫–≤
for letter in sym_lower_set:
    # –í–ª–æ–∂–µ–Ω–Ω—ã–π —Ü–∏–∫–ª –¥–ª—è –æ–±—Ö–æ–¥–∞ –ø–µ—Ä–≤—ã—Ö –±—É–∫–≤
    for city_2 in cities_set:
        first_letter = city_2[0]
        iter_count += 1
        if letter.lower() == first_letter.lower():
           # –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, –µ—Å–ª–∏ –æ–Ω–∏ —Ä–∞–≤–Ω—ã? –≠—Ç–æ —Ö–æ—Ä–æ—à–∞—è –±—É–∫–≤–∞
           break
    else:
        # –ï—Å–ª–∏ –º—ã –æ–±–æ—à–ª–∏ –≤–µ—Å—å —Å–µ—Ç –∏ –Ω–∏ –æ–¥–Ω–æ —Å–ª–æ–≤–æ –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –Ω–∞—à–µ–π –±—É–∫–≤—ã - –±—É–∫–≤—É –∑–∞–Ω–æ—Å–∏–º –∫–∞–∫ "–ø–ª–æ—Ö—É—é"
        bad_letters.add(letter)

# print(bad_letters)
print(iter_count)

# 3. –ú—ã –º–æ–∂–µ–º –Ω–∞—á–∞—Ç—å –ø–∏—Å–∞—Ç—å –∏–≥—Ä—É
computer_city = ''
index = -1

while True:
    # –¢—É—Ç 
    # –•–æ–¥ —á–µ–ª–æ–≤–µ–∫–∞
    human_city = input('–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ –†–æ—Å—Å–∏–∏: ').lower()
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≥–æ—Ä–æ–¥ –µ—Å—Ç—å –≤ —Å–µ—Ç–µ
    if human_city.lower() not in {city.lower() for city in cities_set}:
        print('–¢–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ—Ç. –ß–µ–ª–æ–≤–µ–∫ –ø—Ä–æ–∏–≥—Ä–∞–ª.')
        break

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≥–æ—Ä–æ–¥ —Å–æ–æ—Ç—Å–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–∞–≤–∏–ª–∞–º –∏–≥—Ä—ã.
    # –ï—Å–ª–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä –Ω–∞–∑—ã–≤–∞–ª –≥–æ—Ä–æ–¥:
    if computer_city:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≥–æ—Ä–æ–¥ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –±—É–∫–≤—É –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ
        if human_city[0].lower() != computer_city[-1].lower():
            print('–ù–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –∏–≥—Ä—ã. –ß–µ–ª–æ–≤–µ–∫ –ø—Ä–æ–∏–≥—Ä–∞–ª.')
            break
    
    # –£–¥–∞–ª—è–µ–º –≥–æ—Ä–æ–¥ –∏–∑ —Å–µ—Ç–∞
    cities_set.remove(human_city)

    # –•–æ–¥ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞

    # –¢—É—Ç –º—ã –º–æ–∂–µ–º –ø–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å "–ü–ª–æ—Ö–∏–µ –±—É–∫–≤—ã"

    # –û–±—Ö–æ–¥–∏–º —Å–µ—Ç –∏ –∏—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≥–æ—Ä–æ–¥
    for city in cities_set:
        if city[0].lower() == human_city[-1].lower():
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–ª–æ—Ö–∏–µ –±—É–∫–≤—ã
            if city[-1].lower() in bad_letters:
                continue
            # –ï—Å–ª–∏ –≤—Å–µ —Ö–æ—Ä–æ—à–æ, —Ç–æ –∑–∞–ø–æ–º–∏–Ω–∞–µ–º –≥–æ—Ä–æ–¥
            computer_city = city
            print('–ö–æ–º–ø—å—é—Ç–µ—Ä –Ω–∞–∑–≤–∞–ª –≥–æ—Ä–æ–¥:', computer_city)
            # –£–¥–∞–ª—è–µ–º –≥–æ—Ä–æ–¥ –∏–∑ —Å–µ—Ç–∞
            cities_set.remove(computer_city)
            break
    else:
        print('–ö–æ–º–ø—å—é—Ç–µ—Ä –ø—Ä–æ–∏–≥—Ä–∞–ª.')
        break


